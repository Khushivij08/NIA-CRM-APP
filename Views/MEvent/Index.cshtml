@model IEnumerable<NIA_CRM.Models.MEvent>

@{
    ViewData["Title"] = "Index";
}

<h1>Events</h1>

<partial name="_ErrorMessage" />
<partial name="_SuccessMessage" />
<partial name="_Notification" />


@if (User.IsInRole("Admin"))
{
    <form asp-action="ImportFromExcel" method="post" enctype="multipart/form-data">
        <!-- Help Icon for import Instructions -->
        <i class="fa fa-question-circle help-icon ms-2" onclick="toggleVisibility('importHelp')" title="Click for import instructions"></i>

        <div class="d-flex align-items-center" style="padding-bottom: 10px;">

            <button type="submit" class="btn btn-dark me-2" style="min-width: 150px;">
                <i class="fa fa-file-import"></i> Import Excel
            </button>

            <input type="file" name="file" class="form-control me-2" required />
        </div>
    </form>
    <!-- Import Help Info -->
    <div id="importHelp" class="info-box" style="display: none; border: 1px solid #ccc; padding: 10px; margin: 10px; position: relative;">
        <button class="close-btn" onclick="toggleVisibility('importHelp')">×</button>
        <h5>Import Instructions</h5>
        <p>
            To import member event details, upload an Excel file (.xlsx) with properly formatted data.
            The first row of your file should contain the correct column headers to ensure a successful import.
        </p>
        <p>
            Required fields include <strong>Event Name</strong> and <strong>Event Date</strong> (YYYY-MM-DD format).
            Other fields such as <strong>Event Description</strong> and <strong>Event Location</strong> should be correctly formatted.
        </p>
        <p>
            Please ensure the following column structure:
            <ul>
                <li><strong>Column 1:</strong> Event Name (Text, Required)</li>
                <li><strong>Column 2:</strong> Event Date (Date, YYYY-MM-DD format, Required)</li>
                <li><strong>Column 3:</strong> Event Description (Text, Optional)</li>
                <li><strong>Column 4:</strong> Event Location (Text, Optional)</li>
            </ul>
        </p>
        <a href="/files/MEventImportSample.xlsx" download style="font-weight:bold;">
            Download Sample Excel File for Import
        </a>
        <p>
            Ensure all required data is included and headers match exactly, otherwise, the import may fail.
        </p>
    </div>

}



<!-- Modal for Exporting Annual Actions -->
<div class="modal fade" id="exportAnnualActionsModal" tabindex="-1" aria-labelledby="exportAnnualActionsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exportAnnualActionsModalLabel">Select Fields to Export</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Export Fields Selection Form -->
                <form id="exportAnnualActionsForm" method="post" asp-action="ExportSelectedMemberEventsFields">
                    @* Hidden fields to pass the filters to the Export Controller *@
                    <input type="hidden" name="SearchString" id="modalSearchString" value="@ViewData["SearchString"]">
                    <input type="hidden" name="DateFilter" id="modalDateFilter" value="@ViewData["DateFilter"]">
                    <input type="hidden" name="Participants" id="modalParticipants" value="@ViewData["ParticipantsFilter"]">
                    <input type="hidden" name="EventLocations" id="modalEventLocations" value="@ViewData["EventLocationFilter"]">

                    <div class="form-check mb-3">
                        <input type="checkbox" class="form-check-input" id="includeFilters" name="applyFilters" value="true" checked>
                        <label class="form-check-label" for="includeFilters">Include current filters in export</label>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <input type="checkbox" id="chkMemberName" name="selectedFields" value="MemberName" checked>
                            <label for="chkMemberName">Member Name</label>
                        </div>
                        <div class="col-md-6">
                            <input type="checkbox" name="selectedFields" value="EventName" id="EventName" checked>
                            <label for="EventName">Event Name</label>
                        </div>
                        <div class="col-md-6">
                            <input type="checkbox" name="selectedFields" value="EventDescription" id="EventDescription" checked>
                            <label for="EventDescription">Event Description</label>
                        </div>
                        <div class="col-md-6">
                            <input type="checkbox" name="selectedFields" value="EventLocation" id="EventLocation" checked>
                            <label for="EventLocation">Event Location</label>
                        </div>
                        <div class="col-md-6">
                            <input type="checkbox" name="selectedFields" value="EventDate" id="EventDate" checked>
                            <label for="EventDate">Event Date</label>
                        </div>

                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="submit" form="exportAnnualActionsForm" class="btn btn-dark" data-bs-dismiss="modal">
                    <i class="fa fa-file-excel text-white"></i> Export
                </button>
                <!-- Help Icon for Export Instructions -->
                <i class="fa fa-question-circle help-icon ms-2" onclick="toggleVisibility('exportHelp')" title="Click for export instructions"></i>
            </div>

            <!-- Export Help Info -->
            <div id="exportHelp" class="info-box" style="display: none; border: 1px solid #ccc; padding: 10px; margin: 10px; position: relative;">
                <button class="close-btn" onclick="toggleVisibility('exportHelp')">×</button>
                <h5>Export Instructions</h5>
                <p>
                    Select the fields you wish to export by checking the corresponding boxes.
                    If you have applied filters, you can choose to export the filtered data. Then click the "Export" button to download the file.
                </p>
            </div>

        </div>
    </div>
</div>



<form>
    <input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
    <input type="hidden" name="sortField" value="@ViewData["sortField"]" />
    @{
        var sortField = ViewData["sortField"]?.ToString();
        var sortDirection = ViewData["sortDirection"]?.ToString();
    }

    <!-- Filter/Search Section -->
    <div class="m-auto flex-grow-1">
        <div class="form-horizontal mb-3">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <div class="d-flex flex-wrap">
                    <button class="btn btn-dark @ViewData["Filtering"] me-2 mb-2" type="button" id="filterToggle" data-bs-toggle="collapse" data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">
                        Filter/Search @ViewData["numberFilters"]
                    </button>


                    @if (User.IsInRole("Admin"))
                    {
                        <!-- Export Button to Open Modal -->
                        <button type="button" class="btn btn-dark me-2 mb-2" data-bs-toggle="modal" data-bs-target="#exportAnnualActionsModal">
                            <i class="fa fa-file-excel text-white"></i> Export To Excel
                        </button>
                    }
                </div>
                @if (User.IsInRole("Admin"))
                {
                    <a asp-action="Create" class="btn btn-primary" aria-label="Add a new event">+ Add Event</a>
                }
            </div>
        </div>
    </div>

    @if (ViewData["numberFilters"] != null && ViewData["numberFilters"].ToString() != "0 Filters Applied")
    {
        <div class="filters-container mt-2">
            @if (!string.IsNullOrEmpty(ViewData["SearchString"] as string))
            {
                <span class="custom-filter-badge me-2">
                    Event Name: @ViewData["SearchString"]
                    <button type="button" class="ms-2 clear-btn" aria-label="Clear" onclick="clearFilter('SearchString')">x</button>
                </span>
            }
            @if (ViewData["DateFilter"] != null)
            {
                <span class="custom-filter-badge me-2">
                    Date: @Convert.ToDateTime(ViewData["DateFilter"]).ToString("yyyy-MM-dd")
                    <button type="button" class="ms-2 clear-btn" aria-label="Clear" onclick="clearFilter('DateFilter')">x</button>
                </span>
            }
            @if (ViewData["ParticipantsFilter"] != null)
            {
                <span class="custom-filter-badge me-2">
                    Participants: @ViewData["ParticipantsFilter"]
                    <button type="button" class="ms-2 clear-btn" aria-label="Clear" onclick="clearFilter('Participants')">x</button>
                </span>
            }
            @if (ViewData["EventLocationFilter"] != null)
            {
                <span class="custom-filter-badge me-2">
                    Event Location: @ViewData["EventLocationFilter"]
                    <button type="button" class="ms-2 clear-btn" aria-label="Clear" onclick="clearFilter('EventLocations')">x</button>
                </span>
            }


        </div>
    }

    <div class="collapse @ViewData["ShowFilter"] mt-2" id="collapseFilter">
        <div class="card card-body bg-light">
            <div class="row">
                <!-- Search By Name -->
                <div class="form-group col-md-3">
                    <label for="search-name" class="control-label">Search By Name:</label>
                    @Html.TextBox("SearchString", null, new { @class = "form-control", id = "search-name", placeholder = "Enter name..." })
                </div>

                <!-- Search By Participants -->
                <div class="form-group col-md-3">
                    <label for="search-participants" class="control-label">Search By Participants:</label>
                    @Html.TextBox("Participants", null, new { @class = "form-control", id = "search-participants", placeholder = "Enter participant name..." })
                </div>


                <!-- Filter by Event Locations -->
                <div class="form-group col-md-4">
                    <label for="EventLocations" class="control-label">Filter by Event Locations:</label>
                    @Html.DropDownList("EventLocations", ViewData["EventLocations"] as SelectList, "All Event Locations",
                             new { @class = "form-control" })
                    <span id="event-locations-help" class="sr-only">Select Event Locations to filter members by.</span>
                </div>

                <div class="form-group col-md-3">
                    <label for="filter-date" class="control-label">Filter by Event Date:</label>
                    <input type="date" name="date" class="form-control" id="filter-date" value="@ViewData["DateFilter"]" />
                </div>
                <div class="form-group col-md-4 d-flex align-items-end mt-2">
                    <input type="submit" name="actionButton" value="Apply Filters" class="btn btn-primary me-2" />
                    <a asp-action="Index" class="btn btn-dark">Clear Filters</a>
                </div>
            </div>
        </div>
    </div>

    <div class="d-flex justify-content-between align-items-center">
        <label class="control-label">@ViewData["records"]</label>
        <i class="fa fa-question-circle help-icon ms-2" onclick="toggleVisibility('prreviewHelp')" title="Click for preview panel instructions"></i>
    </div>
    <div id="prreviewHelp" class="info-box" style="display: none; border: 1px solid #ccc; padding: 10px; margin: 10px; position: relative;">
        <button class="close-btn" onclick="toggleVisibility('importHelp')">×</button>
        <h5>Preview Panel Instructions</h5>
        <p>
            By clicking on a record row, a side panel will appear with a preview of the record's details.
            In the Preview panel, you can quickly review the record's information and perform various actions:
            <br />
            - Navigate to the Edit event page
            <br />
            - Delete the event
        </p>
    </div>

    <table class="table table-bordered table-striped" id="event-table" aria-labelledby="events">
        <caption class="sr-only">Event table showing filtered results</caption>
        <thead class="thead-dark">
            <tr>
                <th scope="col" class="table-head">
                    @{
                        var isNameSortField = sortField == "Event Name";
                        var NameSortIndicator = isNameSortField ? (sortDirection == "asc" ? "↑" : "↓") : "";
                    }
                    @if (isNameSortField)
                    {
                        <input type="submit" name="actionButton" value="Event Name" class="btn btn-link" aria-label="Sort by Event Name" />
                        <span class="SortIndicator">@NameSortIndicator</span>
                    }
                    else
                    {
                        <input type="submit" name="actionButton" value="Event Name" class="btn btn-link" aria-label="Sort by Event Name" />
                    }
                </th>
                <th scope="col" class="table-head">
                    @Html.DisplayNameFor(model => model.EventDescription)
                </th>
                <th scope="col" class="table-head">


                    @{
                        var isLocationSortField = sortField == "Event Location";
                        var locationSortIndicator = isLocationSortField ? (sortDirection == "asc" ? "↑" : "↓") : "";
                    }
                    @if (isLocationSortField)
                    {
                        <input type="submit" name="actionButton" value="Event Location" class="btn btn-link" aria-label="Sort by Event Location" />
                        <span class="SortIndicator">@locationSortIndicator</span>
                    }
                    else
                    {
                        <input type="submit" name="actionButton" value="Event Location" class="btn btn-link" aria-label="Sort by Event Location" />
                    }
                </th>
                <th scope="col" class="table-head">
                    @{
                        var isDateSortField = sortField == "Event Date";
                        var dateSortIndicator = isDateSortField ? (sortDirection == "asc" ? "↑" : "↓") : "";
                    }
                    @if (isDateSortField)
                    {
                        <input type="submit" name="actionButton" value="Event Date" class="btn btn-link" aria-label="Sort by Event Date" />
                        <span class="SortIndicator">@dateSortIndicator</span>
                    }
                    else
                    {
                        <input type="submit" name="actionButton" value="Event Date" class="btn btn-link" aria-label="Sort by Event Date" />
                    }
                </th>
                <th scope="col" class="table-head">Participants</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="clickable-row" data-id="@item.Id" title="Click on row to get preview">
                    <td>@Html.DisplayFor(modelItem => item.EventName)</td>
                    <td>@Html.DisplayFor(modelItem => item.EventDescription)</td>
                    <td>@Html.DisplayFor(modelItem => item.EventLocation)</td>
                    <td>@Html.DisplayFor(modelItem => item.EventDate)</td>
                    <td class="d-none d-lg-table-cell">
                        @{
                            int specCount = item.MemberEvents.Count;
                        }
                        @if (specCount > 0)
                        {
                            string firstSpec = item.MemberEvents.FirstOrDefault().Member.MemberName;
                            if (specCount > 1)
                            {
                                string specList = string.Join("<br />", item.MemberEvents.Skip(1).Select(s => s.Member.MemberName));
                                <a class="member-toggle" role="button" data-bs-toggle="collapse" href="#collapseSpecalty@(item.Id)"
                                   aria-expanded="false" aria-controls="collapseSpecalty@(item.Id)">
                                    @firstSpec <span class="participant-badge">@specCount</span>
                                </a>
                                <div class="collapse" id="collapseSpecalty@(item.Id)">
                                    @Html.Raw(specList)
                                </div>
                            }
                            else
                            {
                                @firstSpec
                            }
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <partial name="_PagingNavBar" />
</form>

<div id="previewContainer" class="preview-content hidden"></div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            // Initially hide the preview content
            $('#previewContainer').addClass('hidden');

            // Handle click event on rows with the "clickable-row" class
            $(document).on('click', '.clickable-row', function () {
                var contactId = $(this).data('id'); // Get the Contact ID from the row's data attribute

                if (!contactId) {
                    console.error('No contact ID found for this row.');
                    return;
                }

                // Make an AJAX request to get the partial view for the selected contact
                $.ajax({
                    url: '/MEvent/GetEventPreview', // Adjust the URL to match your routing
                    type: 'GET',
                    data: { id: contactId },
                    success: function (result) {
                        // Insert the result (partial view) into the preview container
                        $('#previewContainer').html(result);
                        $('#previewContainer').removeClass('hidden').addClass('visible'); // Show the preview

                        // Assign the close event to the button inside the loaded preview
                        $('#previewContainer').find('input[name="btnClose"]').on('click', function () {
                            $('#previewContainer').removeClass('visible').addClass('hidden');
                        });





                    },
                    error: function () {
                        alert('An error occurred while loading the preview.');
                    }
                });
            });

            // Window click listener to collapse preview when clicked outside
            $(window).click(function (event) {
                if (!$(event.target).closest('#previewContainer, .clickable-row').length) {
                    $('#previewContainer').removeClass('visible').addClass('hidden');
                }
            });

            // Prevent the preview container from closing when clicked inside
            $('#previewContainer').click(function (event) {
                event.stopPropagation(); // Stop the event from propagating to the window
            });
        });

        function clearFilter(filterName) {
            // Get the current URL
            var url = window.location.href.split('?')[0]; // Current URL without query string

            // Get the query parameters from the URL
            var params = new URLSearchParams(window.location.search);
            params.delete(filterName);

            // Reload the page with the updated query string (filters removed)
            window.location.href = url + '?' + params.toString();
        }
    </script>
}
