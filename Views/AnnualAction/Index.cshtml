@model IEnumerable<NIA_CRM.Models.AnnualAction>

@{
    ViewData["Title"] = "Index";
}

<div class="d-flex flex-row align-items-center justify-content-between mb-4">
    <h1 class="mb-0" id="contacts-title">Annual Actions</h1>
</div>

<partial name="_ErrorMessage" />
<partial name="_SuccessMessage" />



<!-- Export Fields Modal for Annual Actions -->
<div class="modal fade" id="exportAnnualActionsModal" tabindex="-1" aria-labelledby="exportAnnualActionsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exportAnnualActionsModalLabel">Select Fields to Export</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="exportAnnualActionsForm" asp-action="ExportSelectedAnnualActionsFields" method="post">
                    @* Hidden fields to pass the filters to the Export Controller *@
                    <input type="hidden" name="SearchString" id="modalSearchString" value="@ViewData["SearchString"]">
                    <input type="hidden" name="AssigneeFilter" id="modalAssigneeFilter" value="@ViewData["AssigneeFilter"]">
                    <input type="hidden" name="AnnualStatusFilter" id="modalAnnualStatusFilter" value="@ViewData["AnnualStatusFilter"]">
                    <input type="hidden" name="DateFilter" id="modalDateFilter" value="@ViewData["DateFilter"]">


                    <div class="form-check mb-3">
                        <input type="checkbox" class="form-check-input" id="includeFilters" name="applyFilters" value="true" checked>
                        <label class="form-check-label" for="includeFilters">Include current filters in export</label>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <input type="checkbox" id="ActionName" name="selectedFields" value="ActionName" checked>
                            <label class="form-check-label" for="ActionName">Action Name</label>
                        </div>
                        <div class="col-md-6">
                            <input type="checkbox" id="Note" name="selectedFields" value="Note" checked>
                            <label class="form-check-label" for="Note">Note</label>
                        </div>
                        <div class="col-md-6">
                            <input type="checkbox" id="Date" name="selectedFields" value="Date" checked>
                            <label class="form-check-label" for="Date">Date</label>
                        </div>
                        <div class="col-md-6">
                            <input type="checkbox" id="Assignee" name="selectedFields" value="Assignee" checked>
                            <label class="form-check-label" for="Assignee">Assignee</label>
                        </div>
                        <div class="col-md-6">
                            <input type="checkbox" id="AnnualStatus" name="selectedFields" value="AnnualStatus" checked>
                            <label class="form-check-label" for="AnnualStatus">Annual Status</label>
                        </div>
                    </div>

                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" form="exportAnnualActionsForm" class="btn btn-dark" data-bs-dismiss="modal">
                    <i class="fa fa-file-excel text-white"></i> Export
                </button>
                <!-- Help Icon for Export Instructions -->
                <i class="fa fa-question-circle help-icon ms-2" onclick="toggleVisibility('exportHelp')" title="Click for export instructions"></i>
            </div>

            <!-- Export Help Info -->
            <div id="exportHelp" class="info-box" style="display: none; border: 1px solid #ccc; padding: 10px; margin: 10px; position: relative;">
                <button class="close-btn" onclick="toggleVisibility('exportHelp')">×</button>
                <h5>Export Instructions</h5>
                <p>
                    Select the fields you wish to export by checking the corresponding boxes.
                    If you have applied filters, you can choose to export the filtered data. Then click the "Export" button to download the file.
                </p>
            </div>

        </div>
    </div>
</div>



@if (User.IsInRole("Admin"))
{
    <form asp-action="ImportFromExcel" method="post" enctype="multipart/form-data">
        <!-- Help Icon for import Instructions -->
        <i class="fa fa-question-circle help-icon ms-2" onclick="toggleVisibility('importHelp')" title="Click for import instructions"></i>

        <div class="d-flex align-items-center" style="padding-bottom: 10px;">
            <button type="submit" class="btn btn-dark me-2" style="min-width: 150px;">
                <i class="fa fa-file-import"></i> Import Excel
            </button>

            <input type="file" name="file" class="form-control me-2" required />
        </div>

    </form>

    <!-- Import Help Info -->
    <div id="importHelp" class="info-box" style="display: none; border: 1px solid #ccc; padding: 10px; margin: 10px; position: relative;">
        <button class="close-btn" onclick="toggleVisibility('importHelp')">×</button>
        <h5>Import Instructions</h5>
        <p>
            To import annual action details, upload an Excel file (.xlsx) with properly formatted data.
            The first row of your file should contain the correct column headers to ensure a successful import.
        </p>
        <p>
            Required fields include <strong>Name</strong> and <strong>Status</strong>.
            Other fields such as <strong>Note</strong>, <strong>Date</strong> (YYYY-MM-DD format), and
            <strong>Assignee</strong> should be correctly formatted.
        </p>
        <p>
            Ensure the following column structure:
            <ul>
                <li><strong>Column 1:</strong> Name (Text, Required)</li>
                <li><strong>Column 2:</strong> Status (Text, Required, e.g., "In Progress", "Completed")</li>
                <li><strong>Column 3:</strong> Note (Text, Optional remarks or comments)</li>
                <li><strong>Column 4:</strong> Date (Date, YYYY-MM-DD format)</li>
                <li><strong>Column 5:</strong> Assignee (Text, Name of the person responsible)</li>
            </ul>
        </p>
        <a href="/files/AnnualActionImportSample.xlsx" download style="font-weight:bold;">
            Download Sample Excel File for Import
        </a>
        <p>
            Ensure all required data is included and headers match exactly, otherwise, the import may fail.
        </p>
    </div>
}



<form asp-action="Index" method="get" aria-labelledby="contacts-title">
    <input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
    <input type="hidden" name="sortField" value="@ViewData["sortField"]" />
    @{
        var sortField = ViewData["sortField"]?.ToString();
        var sortDirection = ViewData["sortDirection"]?.ToString();
    }

    <!-- Filter/Search Section -->
    <div class="m-auto flex-grow-1">
        <div class="form-horizontal mb-3">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <div class="d-flex flex-wrap">

                    <button class="btn btn-dark @ViewData["Filtering"] me-2 mb-2" type="button" id="filterToggle" data-bs-toggle="collapse" data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">
                        Filter/Search @ViewData["numberFilters"]
                    </button>

                    @if (User.IsInRole("Admin"))
                    {
                        <!-- Export Button to Open Modal for Annual Actions -->
                        <button type="button" class="btn btn-dark me-2 mb-2" data-bs-toggle="modal" data-bs-target="#exportAnnualActionsModal">
                            <i class="fa fa-file-excel text-white"></i> Export To Excel
                        </button>
                    }
                </div>
                @if (User.IsInRole("Admin"))
                {
                    <a asp-action="Create" class="btn btn-primary" aria-label="Add a new Action">+ Add New Action</a>
                }
            </div>
        </div>
    </div>

    @if (ViewData["numberFilters"] != null && ViewData["numberFilters"].ToString() != "0 Filters Applied")
    {
        <div class="filters-container mt-2">
            @if (!string.IsNullOrEmpty(ViewData["SearchString"] as string))
            {
                <span class="custom-filter-badge me-2">
                    Annual Action Name: @ViewData["SearchString"]
                    <button type="button" class="ms-2 clear-btn" aria-label="Clear" onclick="clearFilter('SearchString')">x</button>
                </span>
            }
            @if (!string.IsNullOrEmpty(ViewData["AssigneeFilter"] as string))
            {
                <span class="custom-filter-badge me-2">
                    Assignee: @ViewData["AssigneeFilter"]
                    <button type="button" class="ms-2 clear-btn" aria-label="Clear" onclick="clearFilter('Assignee')">x</button>
                </span>
            }
            @if (!string.IsNullOrEmpty(ViewData["AnnualStatusFilter"] as string))
            {
                <span class="custom-filter-badge me-2">
                    Annual Status: @ViewData["AnnualStatusFilter"]
                    <button type="button" class="ms-2 clear-btn" aria-label="Clear" onclick="clearFilter('AnnualStatusFilter')">x</button>
                </span>
            }

            @if (ViewData["DateFilter"] != null)
            {
                <span class="custom-filter-badge me-2">
                    Date: @Convert.ToDateTime(ViewData["DateFilter"]).ToString("yyyy-MM-dd")
                    <button type="button" class="ms-2 clear-btn" aria-label="Clear" onclick="clearFilter('DateFilter')">x</button>
                </span>
            }
        </div>
    }



    <div class="collapse @ViewData["ShowFilter"] mt-2" id="collapseFilter">
        <div class="card card-body bg-light">
            <div class="row">
                <div class="form-group col-md-3">
                    <label for="search-name" class="control-label">Search By Annual Action Name:</label>
                    @Html.TextBox("SearchString", null, new { @class = "form-control", id = "search-name", placeholder = "Enter Annual Action Name" })
                </div>

                <div class="form-group col-md-3">
                    <label for="search-assignee" class="control-label">Search By Assignee:</label>
                    @Html.TextBox("Assignee", null, new { @class = "form-control", id = "search-assignee", placeholder = "Enter Assignee Name" })
                </div>
                <div class="form-group col-md-3">
                    <label>Filter by Annual Status:</label>
                    @Html.DropDownList("AnnualStatusFilter", new SelectList(Enum.GetValues(typeof(AnnualStatus))), "All Annual Statuses", new { @class = "form-control" })
                </div>

                <div class="form-group col-md-3">
                    <label for="filter-date" class="control-label">Filter by Date:</label>
                    <input type="date" name="date" class="form-control" id="filter-date" value="@ViewData["DateFilter"]" />
                </div>
                <div class="form-group col-md-4 d-flex align-items-end mt-2">
                    <input type="submit" name="actionButton" value="Apply Filters" class="btn btn-primary me-2" />
                    <a asp-action="Index" class="btn btn-dark">Clear Filters</a>
                </div>
            </div>
        </div>
    </div>

    <div class="d-flex justify-content-between align-items-center">
        <label class="control-label">@ViewData["records"]</label>
        <i class="fa fa-question-circle help-icon ms-2" onclick="toggleVisibility('prreviewHelp')" title="Click for preview panel instructions"></i>
    </div>
    <div id="prreviewHelp" class="info-box" style="display: none; border: 1px solid #ccc; padding: 10px; margin: 10px; position: relative;">
        <button class="close-btn" onclick="toggleVisibility('importHelp')">×</button>
        <h5>Preview Panel Instructions</h5>
        <p>
            By clicking on a record row, a side panel will appear with a preview of the record's details.
            In the Preview panel, you can quickly review the record's information and perform various actions:
            <br />
            - Navigate to the Edit annual action page
            <br />
            - Delete the annual action <br />
            Additionally, you can edit or add notes about the annual action directly in the Preview panel and save them instantly.
        </p>
    </div>

    <table class="table table-bordered table-striped" id="event-table" aria-labelledby="strategies">
        <caption class="sr-only">Strategy table showing filtered results</caption>
        <thead class="thead-dark">
            <tr>
                <th scope="col" class="table-head">
                    @{
                        var isNameSortField = sortField == "Annual Actions Name";
                        var nameSortIndicator = isNameSortField ? (sortDirection == "asc" ? "↑" : "↓") : "";
                    }
                    @if (isNameSortField)
                    {
                        <input type="submit" name="actionButton" value="Annual Actions Name" class="btn btn-link" aria-label="Sort by Annual Actions Name" />
                        <span class="SortIndicator">@nameSortIndicator</span>
                    }
                    else
                    {
                        <input type="submit" name="actionButton" value="Annual Actions Name" class="btn btn-link" aria-label="Sort by Annual Actions Name" />
                    }
                </th>
                <th scope="col" class="table-head">
                    @Html.DisplayNameFor(model => model.Note)
                </th>
                <th scope="col" class="table-head">
                    @{
                        var isDateSortField = sortField == "Date";
                        var dateSortIndicator = isDateSortField ? (sortDirection == "asc" ? "↑" : "↓") : "";
                    }
                    @if (isDateSortField)
                    {
                        <input type="submit" name="actionButton" value="Date" class="btn btn-link" aria-label="Sort by Date" />
                        <span class="SortIndicator">@dateSortIndicator</span>
                    }
                    else
                    {
                        <input type="submit" name="actionButton" value="Date" class="btn btn-link" aria-label="Sort by Date" />
                    }
                </th>
                <th scope="col" class="table-head">
                    @{
                        var isAssigneeSortField = sortField == "Assignee";
                        var assigneeSortIndicator = isAssigneeSortField ? (sortDirection == "asc" ? "↑" : "↓") : "";
                    }
                    @if (isAssigneeSortField)
                    {
                        <input type="submit" name="actionButton" value="Assignee" class="btn btn-link" aria-label="Sort by Assignee" />
                        <span class="SortIndicator">@assigneeSortIndicator</span>
                    }
                    else
                    {
                        <input type="submit" name="actionButton" value="Assignee" class="btn btn-link" aria-label="Sort by Assignee" />
                    }
                </th>
                <th scope="col" class="table-head">
                    @{
                        var isStatusSortField = sortField == "Status";
                        var statusSortIndicator = isStatusSortField ? (sortDirection == "asc" ? "↑" : "↓") : "";
                    }
                    @if (isStatusSortField)
                    {
                        <input type="submit" name="actionButton" value="Status" class="btn btn-link" aria-label="Sort by Status" />
                        <span class="SortIndicator">@statusSortIndicator</span>
                    }
                    else
                    {
                        <input type="submit" name="actionButton" value="Status" class="btn btn-link" aria-label="Sort by Status" />
                    }
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="clickable-row" data-id="@item.ID" title="Click on row to get preview">
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Note)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Asignee)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AnnualStatus)
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <partial name="_PagingNavBar" />
</form>


<div id="previewContainer" class="preview-content hidden"></div>






@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


@* Show Preview and save note function script  *@
    <script>
        $(document).ready(function () {
            // Initially hide the preview content
            $('#previewContainer').addClass('hidden');

            // Handle click event on rows with the "clickable-row" class
            $(document).on('click', '.clickable-row', function () {
                var contactId = $(this).data('id'); // Get the Contact ID from the row's data attribute

                if (!contactId) {
                    console.error('No contact ID found for this row.');
                    return;
                }

                // Make an AJAX request to get the partial view for the selected contact
                $.ajax({
                    url: '/AnnualAction/GetAnnualActionPreview', // Adjust the URL to match your routing
                    type: 'GET',
                    data: { id: contactId },
                    success: function (result) {
                        // Insert the result (partial view) into the preview container
                        $('#previewContainer').html(result);
                        $('#previewContainer').removeClass('hidden').addClass('visible'); // Show the preview
                        // Assign the close event to the button inside the loaded preview
                        $('#previewContainer').find('input[name="btnClose"]').on('click', function () {
                            $('#previewContainer').removeClass('visible').addClass('hidden');
                        });

                         // Assign the save event to the save button inside the loaded preview
                        $('#previewContainer').find('#saveNoteBtn').on('click', function (e) {
                            e.preventDefault(); // Prevent default button behavior

                            var contactId = $("#ContactId").val();
                            var note = $("#Note").val();

                            if (!contactId || !note.trim()) {
                                $("#responseMessage").text("Note cannot be empty!").addClass("text-danger").removeClass("text-success").show();
                                return;
                            }

                            $.ajax({
                                type: "POST",
                                url: "/AnnualAction/SaveAnnualActionNote",
                                data: { id: contactId, note: note },
                                dataType: "json",
                                success: function (response) {
                                    if (response.success) {
                                        $("#responseMessage").text(response.message).addClass("text-success").removeClass("text-danger").show();
                                    } else {
                                        $("#responseMessage").text(response.message).addClass("text-danger").removeClass("text-success").show();
                                    }
                                },
                                error: function () {
                                    $("#responseMessage").text("An unexpected error occurred.").addClass("text-danger").removeClass("text-success").show();
                                }
                            });
                        });
                    },
                    error: function () {
                        alert('An error occurred while loading the preview.');
                    }
                });
            });

            // Window click listener to collapse preview when clicked outside
            $(window).click(function (event) {
                if (!$(event.target).closest('#previewContainer, .clickable-row').length) {
                    $('#previewContainer').removeClass('visible').addClass('hidden');
                }
            });

            // Prevent the preview container from closing when clicked inside
            $('#previewContainer').click(function (event) {
                event.stopPropagation(); // Stop the event from propagating to the window
            });
        });

        function clearFilter(filterName){
            // Get the current URL
            var url = window.location.href.split('?')[0]; // Current URL without query string

            // Get the query parameters from the URL
            var params = new URLSearchParams(window.location.search);
            params.delete(filterName)

            // Reload the page with the updated query string (filters removed)
            window.location.href = url + '?' + params.toString();

        }


    </script>

@* Get and Set the values of the filter fields in the modal script *@
@* <script>
                        document.addEventListener("DOMContentLoaded", function () {
                            document.getElementById("exportAnnualActionsModal").addEventListener("show.bs.modal", function () {
                                // Get filter values from the main form
                                let searchString = document.getElementById("search-name")?.value || "";
                                let dateFilter = document.getElementById("filter-date")?.value || "";

                                console.log(searchString, dateFilter);
                                // Assign values to modal's hidden fields
                                document.getElementById("modalSearchString").value = searchString;
                                document.getElementById("modalDateFilter").value = dateFilter;
                            });
                        });
                    </script> *@

}

