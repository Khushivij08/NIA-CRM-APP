@model NIA_CRM.Models.Contact

@{
    ViewData["Title"] = "Edit";
}
<partial name="_Notification" />

<h1>Edit Contact</h1>
@if (ViewData["MemberName"] != null)
{
    <div class="alert alert-info">
        <strong>Member: </strong> @ViewData["MemberName"]
    </div>
    <input type="hidden" asp-for="MemberContacts" value="@ViewData["MemberId"]" />
}
<hr />

<form asp-action="Edit">
    <div class="card card-body bg-light text-black">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="Id" />
        <input type="hidden" asp-for="RowVersion" />

        <div class="row">
            <!-- First Column -->
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="FirstName" class="control-label"></label>
                    <span class="required-label">(required)</span>
                    <input asp-for="FirstName" class="form-control" placeholder="John" />
                    <span asp-validation-for="FirstName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="MiddleName" class="control-label"></label>
                    <input asp-for="MiddleName" class="form-control" placeholder="Michael" />
                    <span asp-validation-for="MiddleName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="LastName" class="control-label"></label>
                    <span class="required-label">(required)</span>
                    <input asp-for="LastName" class="form-control" placeholder="Doe" />
                    <span asp-validation-for="LastName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Department" class="control-label"></label>
                    <input asp-for="Department" class="form-control" placeholder="Marketing" />
                    <span asp-validation-for="Department" class="text-danger"></span>
                </div>
            </div>

            <!-- Second Column -->
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="Title" class="control-label"></label>
                    <input asp-for="Title" class="form-control" placeholder="Manager" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Email" class="control-label"></label>
                    <span class="required-label">(required)</span>
                    <input asp-for="Email" class="form-control" placeholder="john.doe@email.com" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Phone" class="control-label"></label>
                    <span class="required-label">(required)</span>
                    <input asp-for="Phone" id="phoneInput" class="form-control" maxlength="14"
                           placeholder="(123) 456-7890" title="Enter phone number in the format (123) 456-7890" />
                    <span asp-validation-for="Phone" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="LinkedInUrl" class="control-label"></label>
                    <input asp-for="LinkedInUrl" class="form-control" placeholder="https://www.linkedin.com/in/johndoe" />
                    <span asp-validation-for="LinkedInUrl" class="text-danger"></span>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="IsVip" /> @Html.DisplayNameFor(model => model.IsVip)
                    </label>
                    <span asp-validation-for="IsVip" class="text-danger"></span>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="IsArchieved" /> @Html.DisplayNameFor(model => model.IsArchieved)
                    </label>
                    <span asp-validation-for="IsArchieved" class="text-danger"></span>
                </div>
            </div>
        </div>

        <!-- Notes Section (Full Width) -->
        <div class="row mt-3">
            <div class="col-md-12">
                <div class="form-group">
                    @if (User.IsInRole("Admin"))
{
                    <label asp-for="ContactNote" class="control-label"></label>
                    <textarea asp-for="ContactNote" class="form-control" rows="3" placeholder="Add any notes or comments here..."></textarea>
                    <span asp-validation-for="ContactNote" class="text-danger"></span>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Submit Button -->
    <div class="position-bottom-left">
        <a class="btn btn-dark me-2" asp-action="Index">Back to Contacts</a>
        <input class="btn btn-primary me-2" type="submit" value="Save" />
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        const phoneInput = document.getElementById("phoneInput");

        // Function to format the phone number
        function formatPhoneNumber(value) {
            value = value.replace(/\D/g, ""); // Remove non-digits
            if (value.length <= 3) {
                return value ? `(${value}` : "";
            } else if (value.length <= 6) {
                return `(${value.substring(0, 3)}) ${value.substring(3)}`;
            } else {
                return `(${value.substring(0, 3)}) ${value.substring(3, 6)}-${value.substring(6, 10)}`;
            }
        }

        // Format on page load (handles pre-filled data)
        window.addEventListener("DOMContentLoaded", () => {
            if (phoneInput.value) {
                phoneInput.value = formatPhoneNumber(phoneInput.value);
            }
        });

        

        // Handle backspace to avoid breaking the format
        phoneInput.addEventListener("keydown", (e) => {
            if (e.key === "Backspace" && phoneInput.value.length === 1) {
                phoneInput.value = "";
            }
        });
    </script>
    
}
